<Window x:Class="MonacoTestApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:monaco="using:Monaco"
        Title="WinUI.Monaco test app"
        mc:Ignorable="d">

    <Grid>

        <Grid.Resources>

            <Style TargetType="Button"
                   x:Key="ModeButtonStyle"
                   BasedOn="{StaticResource AccentButtonStyle}">
                <Setter Property="Margin"
                        Value="0,0,0,4" />
                <Setter Property="HorizontalAlignment"
                        Value="Stretch" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
            </Style>

            <Style TargetType="TextBox"
                   x:Key="InputTextBoxStyle">
                <Setter Property="Margin"
                        Value="0,0,0,4" />
                <Setter Property="AcceptsReturn"
                        Value="True" />
            </Style>

        </Grid.Resources>


        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Padding="8" Spacing="8">
            <Button x:Name="btnOpenFromFile" Content="Load from file..." Style="{ThemeResource AccentButtonStyle}" Click="btnOpenFromFile_Click" />
            <ComboBox x:Name="EditorLanguageComboBox" PlaceholderText="Select language..." IsEnabled="False"
                  SelectionChanged="EditorLanguageComboBox_SelectionChanged"
                  HorizontalAlignment="Stretch" />
            <TextBlock x:Name="txtCodingLang" Text="" VerticalAlignment="Center"/>
        </StackPanel>
        <monaco:MonacoEditor Grid.Row="1"
                             x:Name="MonacoEditor"
                             EditorTheme="VisualStudioDark"
                             EditorLanguage="python"
                             EditorContentChanged="MonacoEditor_EditorContentChanged"
                             MonacoEditorLoaded="MonacoEditor_MonacoEditorLoaded">
            <monaco:MonacoEditor.ContextFlyout>
                <MenuFlyout x:Name="ctxMenu" Opening="ctxMenu_Opening">
                    <MenuFlyout.Items>
                        <MenuFlyoutItem x:Name="mnuCopy" Icon="Copy" Text="Copy" IsEnabled="False" Click="mnuCopy_Click" />
                        <MenuFlyoutItem x:Name="mnuCut" Icon="Cut" Text="Cut" IsEnabled="{Binding ElementName=mnuCopy,Path=IsEnabled}" Click="mnuCut_Click" />
                        <MenuFlyoutItem x:Name="mnuPaste" Icon="Paste" Text="Paste" Click="mnuPaste_Click" />
                        <MenuFlyoutSeparator />
                        <MenuFlyoutItem x:Name="mnuSelctAll" Icon="SelectAll" Text="Select all" Click="mnuSelctAll_Click" />
                    </MenuFlyout.Items>
                </MenuFlyout>
            </monaco:MonacoEditor.ContextFlyout>
        </monaco:MonacoEditor>
        <TabView Grid.Row="2" IsAddTabButtonVisible="False"  VerticalAlignment="Stretch" Margin="4" >
            <TabView.TabItems>
                <TabViewItem Header="Content" IsClosable="False">
                    <ScrollViewer Background="#cdcdcd">
                        <Grid Padding="16">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Vertical">
                                <StackPanel Spacing="16">
                                    <ComboBox Header="Choose Theme" x:Name="ThemeSelectionComboBox"
                                              SelectionChanged="ThemeSelectionComboBox_OnSelectionChanged"
                                              HorizontalAlignment="Left" Width="300" SelectedIndex="0" />
                                    <Button HorizontalAlignment="Left" Style="{ThemeResource AccentButtonStyle}"
                                         Content="Load Languages"
                                         Click="LoadLanguagesButton_Click" />
                                    <Button Style="{ThemeResource AccentButtonStyle}"
                                         Content="Select All"
                                         Click="SelectAllButton_Click" />
                                    <Button Style="{ThemeResource AccentButtonStyle}"
                                         Content="Open DevTools (F12)"
                                         Click="OpenDevToolsButton_Click" />
                                    <Button Style="{ThemeResource AccentButtonStyle}"
                                         Content="Copy selected text to clipboard"
                                         x:Name="btnCopyTextToClipboard" IsEnabled="{Binding ElementName=mnuCopy,Path=IsEnabled}"
                                         Click="mnuCopy_Click"/>
                                </StackPanel>
                                
                            </StackPanel>
                            <StackPanel Margin="8" Padding="12" BorderBrush="{ThemeResource SystemAccentColor}" BorderThickness="1" CornerRadius="8" Orientation="Vertical" Grid.Column="1">
                                <TextBlock Text="Content" Style="{StaticResource SubtitleTextBlockStyle}" />

                                <TextBox Style="{ThemeResource InputTextBoxStyle}"
                                     PlaceholderText="Editor Content"
                                     Height="120"
                                     x:Name="EditorContentTextBox" />
                                <Grid ColumnSpacing="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                <Button Style="{ThemeResource AccentButtonStyle}"
                                    Content="Set Content" Grid.Column="0" HorizontalAlignment="Stretch"
                                    Click="SetContentButton_Click" />

                                <Button Style="{ThemeResource AccentButtonStyle}"
                                    Content="Get Content" Grid.Column="1" HorizontalAlignment="Stretch"
                                    Click="GetContentButton_Click" />
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>
                </TabViewItem>
                <TabViewItem Header="Options" IsClosable="False">
                    <ScrollViewer Background="#ececec">
                        <StackPanel Orientation="Vertical" Spacing="6" Padding="12">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Spacing="8">
                                <CheckBox x:Name="cbReadOnly" Content="Read only" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" HorizontalAlignment="Stretch"/>
                                <TextBox IsEnabled="{Binding ElementName=cbReadOnly,Path=IsChecked}" PlaceholderText="ReadOnly Custom Message" x:Name="txtReadOnlyMessage" Width="500" HorizontalAlignment="Stretch" TextChanged="txtReadOnlyMessage_TextChanged"/>
                            </StackPanel>
                            <CheckBox Content="Minimap Visible" IsChecked="True" x:Name="cbMinimapVisible" Checked="cbMinimapVisible_Checked" Unchecked="cbMinimapVisible_Unchecked"/>
                            <CheckBox Content="Enable Folding" x:Name="cbFolding" Checked="cbFolding_Checked" Unchecked="cbFolding_Unchecked" IsChecked="True"/>
                            <CheckBox x:Name="cbStickyScroll" Content="Sticky Scroll" IsChecked="True" Checked="cbStickyScroll_Checked" Unchecked="cbStickyScroll_Unchecked"/>
                            <CheckBox x:Name="cbLineNumbers" Content="Line numbers" IsChecked="True" Checked="cbLineNumbers_Checked" Unchecked="cbLineNumbers_Unchecked"/>
                            
                            <!-- Features still not working -->
                            <ComboBox x:Name="cbWordWrapMode" SelectedIndex="1" Visibility="Collapsed">
                                <ComboBoxItem Content="on"/>
                                <ComboBoxItem Content="off"/>
                                <ComboBoxItem Content="wordWrapColumn" />
                                <ComboBoxItem Content="bounded" />
                            </ComboBox>
                            <CheckBox Content="Enable CodeLens" x:Name="cbCodeLens" Visibility="Collapsed" />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Spacing="8" Visibility="Collapsed">
                                <CheckBox x:Name="cbAriaLabelRequire" Content="AriaLabel Required"  />
                                <TextBox x:Name="txtAriaLabel" Width="500" PlaceholderText="Aria Label Text" HorizontalAlignment="Stretch"/>
                            </StackPanel>
                            <ComboBox x:Name="cbAutoIndentStrategy" Visibility="Collapsed" Header="AutoIndent Strategy" SelectedIndex="0" >
                                <ComboBoxItem Content="None"/>
                                <ComboBoxItem Content="Keep"/>
                                <ComboBoxItem Content="Brackets"/>
                                <ComboBoxItem Content="Advanced"/>
                                <ComboBoxItem Content="Full"/>
                            </ComboBox>
                            
                        </StackPanel>
                    </ScrollViewer>
                </TabViewItem>
                <TabViewItem Header="Log" IsClosable="False">
                    <TextBox Grid.Column="0"
                         x:Name="LoggingTextBox"
                         AcceptsReturn="True"
                         IsReadOnly="True" />
                </TabViewItem>
            </TabView.TabItems>
        </TabView>
        

    </Grid>

</Window>