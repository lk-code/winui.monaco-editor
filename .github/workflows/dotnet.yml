name: WinUI Library Build

on:
  push:
    branches:
      - main
  workflow_dispatch:
    
env:
  SOLUTION: source/Monaco.sln
  PROJECT_FILE: source/Monaco/Monaco.csproj
  VERSION: 1.1.46.${{ github.run_number }}

jobs:
  build-and-publish:
    
    strategy:
      matrix:
        configuration: [ Release ]
        platform: [ x64, x86, arm64 ]

    runs-on: windows-latest
    
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1

      - name: Restore dependencies
        run: msbuild ${{ env.SOLUTION }} /t:Restore /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Version Visual Studio SDK projects
        uses: roryprimrose/set-vs-sdk-project-version@v1.0.3
        with:
          # The wildcard filter that identifies projects to version
          projectFilter: ${{ env.PROJECT_FILE }}
          # Maps to the Version element
          version: ${{ env.VERSION }}
          # Maps to the AssemblyVersion element
          assemblyVersion: ${{ env.VERSION }}
          # Maps to the FileVersion element
          fileVersion: ${{ env.VERSION }}
          # Maps to the InformationalVersion element
          informationalVersion: ${{ env.VERSION }}
      
      # Create the app package by building and packaging the project
      - name: Create the app package
        run: msbuild -t:pack ${{ env.SOLUTION }} /p:PackageVersion=${{ env.VERSION }} /p:Configuration=$env:Configuration /p:Platform=$env:Platform  /p:AppxPackageDir="$env:Appx_Package_Dir"
        env:
          Appx_Package_Dir: Packages\
          Configuration: ${{ matrix.configuration }}
          Platform: ${{ matrix.platform }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any

      - name: Publish
        run: dotnet nuget push **/*WinUI.Monaco*.nupkg --no-symbols --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} --source "nuget.org"
        
  after-build-publish:

    needs: build-and-publish

    runs-on: windows-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Version Git Tag
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}
